var d=Object.defineProperty;var g=(s,a,t)=>a in s?d(s,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[a]=t;var e=(s,a,t)=>(g(s,typeof a!="symbol"?a+"":a,t),t);import{a6 as l,a7 as C,a8 as W,aB as f,aa as w,ab as y,ac as T,ad as o,ae as R}from"./index-acfd88c2.js";import{C as b,a as E,G as S,b as A}from"./contract-appuri-beb70e69.browser.esm-27e2a921.js";import{C as B}from"./contract-interceptor-d7b164a7.browser.esm-7eabd2ea.js";import{C as M,a as O}from"./contract-owner-d8e5e29d.browser.esm-58ba10f2.js";import{C as v}from"./contract-platform-fee-e9a19e09.browser.esm-2d8a3af6.js";import{C as I}from"./contract-roles-d62eb0c3.browser.esm-2e0baa5b.js";import{C as P}from"./contract-sales-d41f5816.browser.esm-ad1ea88b.js";import{S as k}from"./erc-721-standard-de9427c3.browser.esm-339b89f7.js";import{E as x}from"./erc-721-f06835ce.browser.esm-e94dcd9c.js";import"./setErc20Allowance-59a569c1.browser.esm-d58717d5.js";import"./QueryParams-754b07b2.browser.esm-a040f1ff.js";import"./index-c14f9dc3.js";import"./treeify-1d6052cc.js";import"./assertEnabled-84d9da6e.browser.esm-a8474b8c.js";import"./drop-claim-conditions-c639c0d1.browser.esm-fc1e163d.js";const c=class c extends k{constructor(t,r,n){let h=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},i=arguments.length>4?arguments[4]:void 0,m=arguments.length>5?arguments[5]:void 0,u=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new C(t,r,i,h,n);super(u,n,m);e(this,"mint",o(async t=>this.erc721.mint.prepare(t)));e(this,"mintTo",o(async(t,r)=>this.erc721.mintTo.prepare(t,r)));e(this,"mintBatch",o(async t=>this.erc721.mintBatch.prepare(t)));e(this,"mintBatchTo",o(async(t,r)=>this.erc721.mintBatchTo.prepare(t,r)));e(this,"burn",o(t=>this.erc721.burn.prepare(t)));this.abi=W.parse(i||[]),this.metadata=new b(this.contractWrapper,f,this.storage),this.app=new E(this.contractWrapper,this.metadata,this.storage),this.roles=new I(this.contractWrapper,c.contractRoles),this.royalties=new M(this.contractWrapper,this.metadata),this.sales=new P(this.contractWrapper),this.encoder=new w(this.contractWrapper),this.estimator=new S(this.contractWrapper),this.events=new A(this.contractWrapper),this.platformFees=new v(this.contractWrapper),this.interceptor=new B(this.contractWrapper),this.signature=new x(this.contractWrapper,this.storage),this.owner=new O(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async isTransferRestricted(){return!await this.contractWrapper.read("hasRole",[y("transfer"),T])}async getMintTransaction(t,r){return this.erc721.getMintTransaction(t,r)}async prepare(t,r,n){return R.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:n})}async call(t,r,n){return this.contractWrapper.call(t,r,n)}};e(c,"contractRoles",l);let p=c;export{p as NFTCollection};
