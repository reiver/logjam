var f=Object.defineProperty;var g=(c,e,t)=>e in c?f(c,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[e]=t;var s=(c,e,t)=>(g(c,typeof e!="symbol"?e+"":e,t),t);import{D as h}from"./QueryParams-754b07b2.browser.esm-52f12690.js";import{a6 as w,a7 as W,a8 as T,aC as b,aa as y,aD as S,B as i,ab as A,ac as E,ad as p,ae as N}from"./index-eb1f45ee.js";import{C as R,a as U,G as k,b as M}from"./contract-appuri-beb70e69.browser.esm-e9bce05e.js";import{C as I}from"./contract-interceptor-d7b164a7.browser.esm-7eabd2ea.js";import{C as x,D as F,a as D}from"./contract-owner-d8e5e29d.browser.esm-11ef7362.js";import{C as L}from"./contract-platform-fee-e9a19e09.browser.esm-d83ac83e.js";import{C as _}from"./contract-roles-d62eb0c3.browser.esm-0c858f9e.js";import{C as v}from"./contract-sales-d41f5816.browser.esm-a35fcaeb.js";import{D as B}from"./drop-claim-conditions-c639c0d1.browser.esm-54b1f333.js";import{S as O}from"./erc-721-standard-de9427c3.browser.esm-458841fd.js";import{E as d}from"./erc-721-f06835ce.browser.esm-3c583904.js";import{P as G}from"./thirdweb-checkout-d1b35418.browser.esm-1c2a8bd7.js";import"./setErc20Allowance-59a569c1.browser.esm-3b0a4e52.js";import"./index-1b4397f9.js";import"./treeify-5226e7a1.js";import"./assertEnabled-84d9da6e.browser.esm-a8a3bc9a.js";const m=class m extends O{constructor(t,a,r){let n=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},o=arguments.length>4?arguments[4]:void 0,l=arguments.length>5?arguments[5]:void 0,C=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new W(t,a,o,n,r);super(C,r,l);s(this,"createBatch",p(async(t,a)=>this.erc721.lazyMint.prepare(t,a)));s(this,"claimTo",p(async(t,a,r)=>this.erc721.claimTo.prepare(t,a,r)));s(this,"claim",p(async(t,a)=>this.erc721.claim.prepare(t,a)));s(this,"burn",p(async t=>this.erc721.burn.prepare(t)));this.abi=T.parse(o||[]),this.metadata=new R(this.contractWrapper,b,this.storage),this.app=new U(this.contractWrapper,this.metadata,this.storage),this.roles=new _(this.contractWrapper,m.contractRoles),this.royalties=new x(this.contractWrapper,this.metadata),this.sales=new v(this.contractWrapper),this.encoder=new y(this.contractWrapper),this.estimator=new k(this.contractWrapper),this.events=new M(this.contractWrapper),this.platformFees=new L(this.contractWrapper),this.interceptor=new I(this.contractWrapper),this.claimConditions=new B(this.contractWrapper,this.metadata,this.storage),this.signature=new d(this.contractWrapper,this.storage),this.revealer=new F(this.contractWrapper,this.storage,S.name,()=>this.erc721.nextTokenIdToMint()),this.signature=new d(this.contractWrapper,this.storage),this.owner=new D(this.contractWrapper),this.checkout=new G(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async totalSupply(){const[t,a]=await Promise.all([this.totalClaimedSupply(),this.totalUnclaimedSupply()]);return t.add(a)}async getAllClaimed(t){const a=i.from((t==null?void 0:t.start)||0).toNumber(),r=i.from((t==null?void 0:t.count)||h).toNumber(),n=Math.min((await this.totalClaimedSupply()).toNumber(),a+r);return await Promise.all(Array.from(Array(n).keys()).map(o=>this.get(o.toString())))}async getAllUnclaimed(t){const a=i.from((t==null?void 0:t.start)||0).toNumber(),r=i.from((t==null?void 0:t.count)||h).toNumber(),n=i.from(Math.max((await this.totalClaimedSupply()).toNumber(),a)),o=i.from(Math.min((await this.contractWrapper.read("nextTokenIdToMint",[])).toNumber(),n.toNumber()+r));return await Promise.all(Array.from(Array(o.sub(n).toNumber()).keys()).map(l=>this.erc721.getTokenMetadata(n.add(l).toString())))}async totalClaimedSupply(){return this.erc721.totalClaimedSupply()}async totalUnclaimedSupply(){return this.erc721.totalUnclaimedSupply()}async isTransferRestricted(){return!await this.contractWrapper.read("hasRole",[A("transfer"),E])}async getClaimTransaction(t,a,r){return this.erc721.getClaimTransaction(t,a,r)}async prepare(t,a,r){return N.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:a,overrides:r})}async call(t,a,r){return this.contractWrapper.call(t,a,r)}};s(m,"contractRoles",w);let u=m;export{u as SignatureDrop};
